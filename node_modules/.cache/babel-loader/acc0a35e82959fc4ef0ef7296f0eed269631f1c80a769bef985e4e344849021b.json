{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amin\\\\Desktop\\\\clon code\\\\create-anew-user\\\\src\\\\component\\\\users.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AppContext } from \"../App\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Users = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [error, setError] = useState(null); // برای مدیریت خطا\n  const {\n    userDetails\n  } = useContext(AppContext);\n\n  // استفاده از useEffect برای بارگیری داده‌ها از API\n  useEffect(() => {\n    fetchUsersFromServer();\n  }, []);\n\n  // تابعی که کاربران را از API می‌گیرد\n  const fetchUsersFromServer = () => {\n    console.log(\"Fetching users from API...\");\n    axios.get('https://jsonplaceholder.typicode.com/users').then(response => {\n      const serverUsers = response.data || [];\n      console.log(\"Fetched users:\", serverUsers);\n      setUsers(serverUsers);\n      localStorage.setItem(\"users\", JSON.stringify(serverUsers));\n    }).catch(error => {\n      console.error(\"Failed to fetch users from API:\", error);\n      setError(\"Error fetching users.\");\n    });\n  };\n\n  // در صورتی که خطایی رخ دهد، نمایش پیغام خطا\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n\n  // تابع حذف کاربر از لیست\n  const handleDelete = user => {\n    const filteredUsers = users.filter(u => u.id !== user.id);\n    setUsers(filteredUsers);\n    localStorage.setItem(\"users\", JSON.stringify(filteredUsers));\n    const currentUser = JSON.parse(localStorage.getItem(\"userDetails\"));\n    if (currentUser && currentUser.id === user.id) {\n      localStorage.removeItem(\"userDetails\");\n    }\n  };\n\n  // تابع به‌روزرسانی ایمیل کاربر\n  const handleUpdate = user => {\n    const updated = users.map(u => u.id === user.id ? {\n      ...u,\n      email: \"ztms@12356hgj.com\"\n    } : u);\n    setUsers(updated);\n    localStorage.setItem(\"users\", JSON.stringify(updated));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: users.filter(user => user != null).map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-4 p-5 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/user/${user.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: user.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger btn-sm\",\n            onClick: () => handleDelete(user),\n            children: \"DELETE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-warning btn-sm\",\n            onClick: () => handleUpdate(user),\n            children: \"UPDATE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, user.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Users, \"+EDNN94mcs3ifGfLlZj2fxIaUbk=\");\n_c = Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["useEffect","useState","useContext","Link","AppContext","axios","jsxDEV","_jsxDEV","Users","_s","users","setUsers","error","setError","userDetails","fetchUsersFromServer","console","log","get","then","response","serverUsers","data","localStorage","setItem","JSON","stringify","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","handleDelete","user","filteredUsers","filter","u","id","currentUser","parse","getItem","removeItem","handleUpdate","updated","map","email","className","to","name","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Amin/Desktop/clon code/create-anew-user/src/component/users.js"],"sourcesContent":["import { useEffect, useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AppContext } from \"../App\";\r\nimport axios from \"axios\";\r\n\r\nexport const Users = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [error, setError] = useState(null);  // برای مدیریت خطا\r\n  const { userDetails } = useContext(AppContext);\r\n\r\n  // استفاده از useEffect برای بارگیری داده‌ها از API\r\n  useEffect(() => {\r\n    fetchUsersFromServer();\r\n  }, []);\r\n\r\n  // تابعی که کاربران را از API می‌گیرد\r\n  const fetchUsersFromServer = () => {\r\n  console.log(\"Fetching users from API...\");\r\n\r\n  axios.get('https://jsonplaceholder.typicode.com/users')\r\n    .then((response) => {\r\n      const serverUsers = response.data || [];\r\n      console.log(\"Fetched users:\", serverUsers);\r\n      setUsers(serverUsers);\r\n      localStorage.setItem(\"users\", JSON.stringify(serverUsers));\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Failed to fetch users from API:\", error);\r\n      setError(\"Error fetching users.\");\r\n    });\r\n};\r\n\r\n\r\n  // در صورتی که خطایی رخ دهد، نمایش پیغام خطا\r\n  if (error) {\r\n    return <p>{error}</p>;\r\n  }\r\n\r\n  // تابع حذف کاربر از لیست\r\n  const handleDelete = (user) => {\r\n    const filteredUsers = users.filter(u => u.id !== user.id);\r\n    setUsers(filteredUsers);\r\n    localStorage.setItem(\"users\", JSON.stringify(filteredUsers));\r\n    const currentUser = JSON.parse(localStorage.getItem(\"userDetails\"));\r\n    if (currentUser && currentUser.id === user.id) {\r\n      localStorage.removeItem(\"userDetails\");\r\n    }\r\n  };\r\n\r\n  // تابع به‌روزرسانی ایمیل کاربر\r\n  const handleUpdate = (user) => {\r\n    const updated = users.map(u =>\r\n      u.id === user.id ? { ...u, email: \"ztms@12356hgj.com\" } : u\r\n    );\r\n    \r\n    setUsers(updated);\r\n    localStorage.setItem(\"users\", JSON.stringify(updated));\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {users.filter(user => user != null).map(user => (\r\n        <div className=\"col-4 p-5 text-center\" key={user.id}>\r\n          \r\n          <Link to={`/user/${user.id}`}>\r\n            <h4>{user.name}</h4>\r\n          </Link>\r\n          <h5>{user.email}</h5>\r\n          <div className=\"row\">\r\n            <div className=\"col-6 text-center\">\r\n              <button className=\"btn btn-danger btn-sm\" onClick={() => handleDelete(user)}>DELETE</button>\r\n            </div>\r\n            <div className=\"col-6 text-center\">\r\n              <button className=\"btn btn-warning btn-sm\" onClick={() => handleUpdate(user)}>UPDATE</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACvD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,UAAU,QAAQ,QAAQ;AACnC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;EAC3C,MAAM;IAAEa;EAAY,CAAC,GAAGZ,UAAU,CAACE,UAAU,CAAC;;EAE9C;EACAJ,SAAS,CAAC,MAAM;IACde,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMA,oBAAoB,GAAGA,CAAA,KAAM;IACnCC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IAEzCZ,KAAK,CAACa,GAAG,CAAC,4CAA4C,CAAC,CACpDC,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAMC,WAAW,GAAGD,QAAQ,CAACE,IAAI,IAAI,EAAE;MACvCN,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEI,WAAW,CAAC;MAC1CV,QAAQ,CAACU,WAAW,CAAC;MACrBE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACL,WAAW,CAAC,CAAC;IAC5D,CAAC,CAAC,CACDM,KAAK,CAAEf,KAAK,IAAK;MAChBI,OAAO,CAACJ,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvDC,QAAQ,CAAC,uBAAuB,CAAC;IACnC,CAAC,CAAC;EACN,CAAC;;EAGC;EACA,IAAID,KAAK,EAAE;IACT,oBAAOL,OAAA;MAAAqB,QAAA,EAAIhB;IAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACvB;;EAEA;EACA,MAAMC,YAAY,GAAIC,IAAI,IAAK;IAC7B,MAAMC,aAAa,GAAGzB,KAAK,CAAC0B,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKJ,IAAI,CAACI,EAAE,CAAC;IACzD3B,QAAQ,CAACwB,aAAa,CAAC;IACvBZ,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACS,aAAa,CAAC,CAAC;IAC5D,MAAMI,WAAW,GAAGd,IAAI,CAACe,KAAK,CAACjB,YAAY,CAACkB,OAAO,CAAC,aAAa,CAAC,CAAC;IACnE,IAAIF,WAAW,IAAIA,WAAW,CAACD,EAAE,KAAKJ,IAAI,CAACI,EAAE,EAAE;MAC7Cf,YAAY,CAACmB,UAAU,CAAC,aAAa,CAAC;IACxC;EACF,CAAC;;EAED;EACA,MAAMC,YAAY,GAAIT,IAAI,IAAK;IAC7B,MAAMU,OAAO,GAAGlC,KAAK,CAACmC,GAAG,CAACR,CAAC,IACzBA,CAAC,CAACC,EAAE,KAAKJ,IAAI,CAACI,EAAE,GAAG;MAAE,GAAGD,CAAC;MAAES,KAAK,EAAE;IAAoB,CAAC,GAAGT,CAC5D,CAAC;IAED1B,QAAQ,CAACiC,OAAO,CAAC;IACjBrB,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACkB,OAAO,CAAC,CAAC;EACxD,CAAC;EAED,oBACErC,OAAA;IAAKwC,SAAS,EAAC,KAAK;IAAAnB,QAAA,EACjBlB,KAAK,CAAC0B,MAAM,CAACF,IAAI,IAAIA,IAAI,IAAI,IAAI,CAAC,CAACW,GAAG,CAACX,IAAI,iBAC1C3B,OAAA;MAAKwC,SAAS,EAAC,uBAAuB;MAAAnB,QAAA,gBAEpCrB,OAAA,CAACJ,IAAI;QAAC6C,EAAE,EAAE,SAASd,IAAI,CAACI,EAAE,EAAG;QAAAV,QAAA,eAC3BrB,OAAA;UAAAqB,QAAA,EAAKM,IAAI,CAACe;QAAI;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC,eACPzB,OAAA;QAAAqB,QAAA,EAAKM,IAAI,CAACY;MAAK;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrBzB,OAAA;QAAKwC,SAAS,EAAC,KAAK;QAAAnB,QAAA,gBAClBrB,OAAA;UAAKwC,SAAS,EAAC,mBAAmB;UAAAnB,QAAA,eAChCrB,OAAA;YAAQwC,SAAS,EAAC,uBAAuB;YAACG,OAAO,EAAEA,CAAA,KAAMjB,YAAY,CAACC,IAAI,CAAE;YAAAN,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzF,CAAC,eACNzB,OAAA;UAAKwC,SAAS,EAAC,mBAAmB;UAAAnB,QAAA,eAChCrB,OAAA;YAAQwC,SAAS,EAAC,wBAAwB;YAACG,OAAO,EAAEA,CAAA,KAAMP,YAAY,CAACT,IAAI,CAAE;YAAAN,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1F,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA,GAboCE,IAAI,CAACI,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAc9C,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACvB,EAAA,CA3EWD,KAAK;AAAA2C,EAAA,GAAL3C,KAAK;AAAA,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}